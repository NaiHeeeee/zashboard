name: Sync Latest Release

on:
  schedule:
    - cron: '0 * * * *'
  workflow_dispatch:

jobs:
  sync:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Get latest release info
        id: release
        run: |
          RELEASE_INFO=$(curl -s https://api.github.com/repos/Zephyruso/zashboard/releases/latest)
          echo "RELEASE_TAG=$(echo $RELEASE_INFO | jq -r .tag_name)" >> $GITHUB_ENV
          echo "DOWNLOAD_URL=$(echo $RELEASE_INFO | jq -r '.assets[] | select(.name=="dist.zip") | .browser_download_url')" >> $GITHUB_ENV
          
      - name: Check last processed version
        id: check_version
        run: |
          if [ ! -f README.md ] || ! grep -q "<!-- RELEASE_TAG -->" README.md; then
            echo "当前版本: <!-- RELEASE_TAG -->v0.0.0<!-- /RELEASE_TAG -->" >> README.md
          fi
          LAST_VERSION=$(sed -n 's/.*<!-- RELEASE_TAG -->\(.*\)<!-- \/RELEASE_TAG -->/\1/p' README.md)
          echo "LAST_VERSION=$LAST_VERSION" >> $GITHUB_ENV
          if [ "$LAST_VERSION" == "$RELEASE_TAG" ]; then
            echo "no_update=true" >> $GITHUB_OUTPUT
          else
            echo "no_update=false" >> $GITHUB_OUTPUT
      - name: Update version in README
        if: ${{ steps.check_version.outputs.no_update != 'true' }}
        run: |
          if [ ! -f README.md ]; then
            echo "当前版本: <!-- RELEASE_TAG -->$RELEASE_TAG<!-- /RELEASE_TAG -->" > README.md
          elif ! grep -q "<!-- RELEASE_TAG -->" README.md; then
            echo "当前版本: <!-- RELEASE_TAG -->$RELEASE_TAG<!-- /RELEASE_TAG -->" >> README.md
          else
            sed -i "s|<!-- RELEASE_TAG -->.*<!-- /RELEASE_TAG -->|<!-- RELEASE_TAG -->$RELEASE_TAG<!-- /RELEASE_TAG -->|" README.md
          fi
            sed -i "s|<!-- RELEASE_TAG -->.*<!-- /RELEASE_TAG -->|<!-- RELEASE_TAG -->$RELEASE_TAG<!-- /RELEASE_TAG -->|" README.md
      - name: Commit and push changes
        if: ${{ steps.check_version.outputs.no_update != 'true' }}
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add README.md
          git commit -m "Update version to $RELEASE_TAG"
          git pushREADME.md
          git commit -m "Update version to $RELEASE_TAG"
          git push